DROP TABLE IF EXISTS USER_ROLES;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS SECURITY_ROLES;
DROP TABLE IF EXISTS USER_DETAILS;

CREATE TABLE user_details
(
	id bigint NOT NULL AUTO_INCREMENT PRIMARY KEY,
	firstname VARCHAR(255) NOT NULL,
	lastname VARCHAR(255) NOT NULL,
	email VARCHAR(255) NOT NULL
);


CREATE TABLE user
(
	username VARCHAR(255) NOT NULL PRIMARY KEY,
	password VARCHAR(255) NOT NULL,
	detail_id bigint NOT NULL,
	FOREIGN KEY (detail_id) REFERENCES user_details (id) ON DELETE CASCADE ON UPDATE CASCADE
	
);

CREATE TABLE security_roles
(
	name VARCHAR(255) NOT NULL PRIMARY KEY,
	description VARCHAR(255)
);

CREATE TABLE user_roles
(
	username VARCHAR(255) NOT NULL,
	rolename VARCHAR(255) NOT NULL,
	PRIMARY KEY(username, rolename),
	FOREIGN KEY (username) REFERENCES user (username) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (rolename) REFERENCES security_roles (name) ON DELETE CASCADE ON UPDATE CASCADE
);


INSERT INTO "PUBLIC"."SECURITY_ROLES" (NAME,DESCRIPTION) VALUES ('ADMIN','ADMINISTRATOR ROLE');
INSERT INTO "PUBLIC"."SECURITY_ROLES" (NAME,DESCRIPTION) VALUES ('USER','SIMPLE USER ROLE');


INSERT INTO "PUBLIC"."USER" (USERNAME,PASSWORD,DETAIL_ID) VALUES ('john','john',1);


INSERT INTO "PUBLIC"."USER_DETAILS" (ID,FIRSTNAME,LASTNAME,EMAIL) VALUES (1,'John','Doe','jd@gmail.com');


INSERT INTO "PUBLIC"."USER_ROLES" (USERNAME,ROLENAME) VALUES ('john','ADMIN');


--Varianta cu digest

DROP TABLE IF EXISTS USER_ROLES;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS SECURITY_ROLES;
DROP TABLE IF EXISTS USER_DETAILS;
DROP ALIAS IF EXISTS DIGEST;



CREATE ALIAS DIGEST FOR "org.apache.commons.codec.digest.DigestUtils.md5(java.lang.String)";




CREATE TABLE user_details
(
	id bigint NOT NULL AUTO_INCREMENT PRIMARY KEY,
	firstname VARCHAR(255) NOT NULL,
	lastname VARCHAR(255) NOT NULL,
	email VARCHAR(255) NOT NULL
);



CREATE TABLE user
(
	username VARCHAR(255) NOT NULL PRIMARY KEY,
	password  VARCHAR(255) NOT NULL AS DIGEST(password),
	detail_id bigint NOT NULL,
	FOREIGN KEY (detail_id) REFERENCES user_details (id) ON DELETE CASCADE ON UPDATE CASCADE
	
);

CREATE TABLE security_roles
(
	name VARCHAR(255) NOT NULL PRIMARY KEY,
	description VARCHAR(255)
);

CREATE TABLE user_roles
(
	username VARCHAR(255) NOT NULL,
	rolename VARCHAR(255) NOT NULL,
	PRIMARY KEY(username, rolename),
	FOREIGN KEY (username) REFERENCES user (username) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (rolename) REFERENCES security_roles (name) ON DELETE CASCADE ON UPDATE CASCADE
);


INSERT INTO "PUBLIC"."SECURITY_ROLES" (NAME,DESCRIPTION) VALUES ('ADMIN','ADMINISTRATOR ROLE');
INSERT INTO "PUBLIC"."SECURITY_ROLES" (NAME,DESCRIPTION) VALUES ('USER','SIMPLE USER ROLE');
INSERT INTO "PUBLIC"."SECURITY_ROLES" (NAME,DESCRIPTION) VALUES ('GUEST','GUEST ROLE');

INSERT INTO "PUBLIC"."USER_DETAILS" (FIRSTNAME,LASTNAME,EMAIL) VALUES ('John','Doe','jd@gmail.com');

INSERT INTO "PUBLIC"."USER" (USERNAME,PASSWORD,DETAIL_ID) VALUES ('john','john',1);

INSERT INTO "PUBLIC"."USER_ROLES" (USERNAME,ROLENAME) VALUES ('john','ADMIN');



INSERT INTO "PUBLIC"."USER_DETAILS" (FIRSTNAME,LASTNAME,EMAIL) VALUES ('user','user','user@gmail.com');

INSERT INTO "PUBLIC"."USER" (USERNAME,PASSWORD,DETAIL_ID) VALUES ('user','user',2);

INSERT INTO "PUBLIC"."USER_ROLES" (USERNAME,ROLENAME) VALUES ('user','USER');


INSERT INTO "PUBLIC"."USER_DETAILS" (FIRSTNAME,LASTNAME,EMAIL) VALUES ('quest','quest','quest@gmail.com');

INSERT INTO "PUBLIC"."USER" (USERNAME,PASSWORD,DETAIL_ID) VALUES ('quest','quest',3);

INSERT INTO "PUBLIC"."USER_ROLES" (USERNAME,ROLENAME) VALUES ('quest','GUEST');






